/**
 *  Flex Grid Framework
 *  -------------------
 *  Super minimalistic CSS flex framework for responsive-friendly websites.
 *
 *  @author milankyncl <kontakt@milankyncl.cz>
 *  @version 1.1.0
 */

/**
 * Some settings here...
 */

// Number of columns
$columns: 24 !default;

// Gasp between columns in grid
$columnGasp: 1rem !default;

// Number of max. indentation in REM unit for padding and margin
$indentation: 10 !default;

// Breakpoints
$breakpoints: (
    lg: 1440px,
    md: 1024px,
    sm: 768px,
    xs: 560px
) !default;

/**
 * Mixin definitions
 */

@mixin column($size, $breakpoint: false) {

    @if $size < 0 or $size > $columns {

        @error "Column size must be between 0 and " + $size;
    }

    $width: (100% / $columns) * $size;

    @if $breakpoint == false {

        flex-basis: $width;
        max-width: $width;
    }

    @if $breakpoint != false {

        $breakpointWidth: false;

        @each $breakpointIndex, $max-width in $breakpoints {

            @if $breakpointIndex == $breakpoint {

                $breakpointWidth: $max-width;
            }
        }

        @if $breakpointWidth == false {

            @error "Invalid breakpoint name provided: #{$breakpoint}";
        }

        @media screen and (max-width: $breakpointWidth) {

            flex-basis: $width;
            max-width: $width;
        }
    }
}

/**
 * Now the code.. (:
 */

.row {

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    margin-left: -($columnGasp / 2);
    margin-right: -($columnGasp / 2);

    &--v-center {

        align-items: center;
    }

    &--v-top {

        align-items: flex-start;
    }

    &--v-bottom {

        align-items: flex-end;
    }

    &--h-right {

        justify-content: flex-end;
    }

    &--h-center {

        justify-content: center;
    }

    &--space-between {

        justify-content: space-between;
    }

    &--space-around {

        justify-content: space-around;
    }

    &--stretch {

        align-items: stretch;
    }

    &--nowrap {

        flex-wrap: nowrap;
    }

    &--wrap-reverse {

        flex-wrap: wrap-reverse;
    }

    &--line-gasp {

        > .col {

            padding-top: $columnGasp / 2;
            padding-bottom: $columnGasp / 2;
        }
    }
}

.col {

    flex-basis: auto;

    padding-left: $columnGasp / 2;
    padding-right: $columnGasp / 2;

    box-sizing: border-box;

    &--fill {

        flex: 1;
    }
}

// Define col and offset sizes

@for $i from 0 through $columns {

    .col--#{$i} {

        @include column($i);
    }

    .offset--#{$i} {

        margin-left: (100% / $columns) * $i;
    }
}

// Now breakpoints magic

@each $breakpoint, $max-width in $breakpoints {

    @for $i from 0 through $columns {

        .col--#{$breakpoint}-#{$i} {

            @include column($i, $breakpoint);
        }

        .offset--#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                margin-left: (100% / $columns) * $i;
            }
        }
    }
}

// Paddings and Margins

@for $i from 0 through $indentation {

    .p-t-#{$i} {

        padding-top: #{$i}rem;
    }

    .p-t-#{$i}-h {

        padding-top: #{$i - .5}rem;
    }

    .p-b-#{$i} {

        padding-bottom: #{$i}rem;
    }

    .p-l-#{$i} {

        padding-left: #{$i}rem;
    }

    .p-r-#{$i} {

        padding-right: #{$i}rem;
    }

    .m-b-#{$i} {

        margin-bottom: #{$i}rem;
    }

    .m-b-#{$i}-h {

        margin-bottom: #{$i - .5}rem;
    }

    .m-t-#{$i} {

        margin-top: #{$i}rem;
    }

    .m-t-#{$i}-h {

        margin-top: #{$i - .5}rem;
    }

    .m-r-#{$i} {

        margin-right: #{$i}rem;
    }

    .m-l-#{$i} {

        margin-left: #{$i}rem;
    }
}

// Breakpoint magic for paddings and margins

@each $breakpoint, $max-width in $breakpoints {

    @for $i from 0 through $indentation {

        .p-t-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                padding-top: #{$i}rem;
            }
        }

        .p-b-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                padding-bottom: #{$i}rem;
            }
        }

        .p-l-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                padding-left: #{$i}rem;
            }
        }

        .p-r-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                padding-right: #{$i}rem;
            }
        }


        .m-b-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                margin-bottom: #{$i}rem;
            }
        }

        .m-t-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                margin-top: #{$i}rem;
            }
        }

        .m-r-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                margin-right: #{$i}rem;
            }
        }

        .m-l-#{$breakpoint}-#{$i} {

            @media all and (max-width: $max-width) {

                margin-left: #{$i}rem;
            }
        }
    }
}

// Hidden, visible state

@each $breakpoint, $max-width in $breakpoints {

    @media all and (max-width: $max-width) {

        .hidden-#{$breakpoint} {

            display: none;
        }

        .visible-#{$breakpoint} {

            display: block;
        }
    }
}